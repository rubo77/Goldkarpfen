#V0.55

0. ABOUT [45]

1. SPECIAL DISTINGUISHING MARK [53]

2. PLATFORM SPECIFIC INSTALL INSTRUCTIONS [63]
  2.1 OpenBSD [64]
  2.2 ANDROID [93]
  2.2.1 ANDROID AUTOMATIC INSTALL [94]
  2.2.2 ANDROID MANUAL INSTALL [102]
  2.3 UBUNTU QUICK INSTALL WITH TOR CONTROLLER [128]

3. SPECIAL INSTALL MODES [153]
  3.1 INSTALATION WITH ACCESS TO TOR CONTROLLER [154]
  3.2 USAGE WITH TOR_BROWSER [184]
  3.3 USAGE WITH i2pd [190]
  3.4 MIXED NODES [217]
  3.5 GOPHER instead of HTTP [235]

4. BASIC MAINTENANCE [249]
  4.1 UPDATES [250]
  4.2 NODE LIST MANAGEMENT [272]
  4.4 DIFF-PATCH-MODE # dependency : xdelta3 [298]
  4.3 PRUNING OF ITP-FILES [292]
  4.5 MIGRATING TO A NEW INSTALLATION [316]
  4.6 WHITLISTING DOWNLOAD MODE [325]
  4.7 OFFER MORE THAN ONE FORK FOR DOWNLOAD [332]
  4.8 DISABLE darkhttpd LOGGING [336]

5. ADVANCED USGAE [343]
  5.1 MANUALLY ADDING DATA FILES [344]
  5.2 USER MADE PLUGINS [357]
  5.3 PLUGIN DEVELOPEMENT [375]
  5.4 CUSTOM SCRIPTS [393]
  5.5 SHARE HOSTING 00-ENTRIES [403]
  5.6 FORKING GOLDKARPFEN [412]

6. DISTRIBUTED SEARCH ENGINES [421]

7. ADDENDUM [452]

#################################################

0. ABOUT
  Goldkarpfen was designed to provide a robust communication network, to secure
  a share hosting platform for important Information, that are important for
                            humans
  Besides other things it is a network-framework for distributed
  focus-search-engines (search engines with a limited set of data)


1. SPECIAL DISTINGUISHING MARK
  Goldkarpfen is a p2p-share-hosted daily-routine blog like communication
  network. The main difference between Goldkarpfen and other systems is the calm
  way of publishing : NODES WILL ONLY SYNC EACH OTHER ONCE A DAY - keep this in
  mind.
  Publishing (archiving) ->ONCE<- a day is advised (publishing more than one time
  a day is not prohibited, because it will not cause any technical problems, but
  can lead to different daily version for different users)


2. PLATFORM SPECIFIC INSTALL INSTRUCTIONS
2.1 OpenBSD
  - install : coreutils gtar gsed
  NOTE : you can build coreutils yourself and only build gdate and gstat

  - recommended :
    use a start script [ยน] OR
    create an extra-user OR 
    setup a chroot-directory
  to avoid global usage of gsed, gtar, gstat, gdate

  - create ~/gkbin and make sure it's in PATH (echo $PATH)
cd ~/gkbin
ln -s /usr/local/bin/gtar ./tar
ln -s /usr/local/bin/gdate ./date
ln -s /usr/local/bin/gsed ./sed
ln -s /usr/local/bin/gstat ./stat

  - edit ~/gkbin/sha512sum to contain this:
#!/bin/sh
echo "$(sha512 -q "$1")  $1"

  - make it executable :
chmod 755 ~/gkbin/sha512sum

  - for more easy usage you may consider to install mksh

  - proceed with the regular README
  NOTE : tor-data-dir is : /var/tor

2.2 ANDROID
2.2.1 ANDROID AUTOMATIC INSTALL
  - check https://gitlab.com/rubo77/Goldkarpfen/-/blob/main/README.md

  - NOTE : if you enable also i2p support
pkg install i2pd && i2pd --daemon --loglevel=none &
  - run gki.sh again
sh gki.sh

2.2.2 ANDROID MANUAL INSTALL
  - install termux (from Fdroid, or ...)
  - upgrade
pkg upgrade
  - install the dependencies
pkg install file fzy openssl-tool silversearcher-ag bc curl darkhttpd vim tor ncurses-utils libqrencode #i2pd
if ! grep "^export EDITOR" .bashrc;then echo "export EDITOR=nano" >> .bashrc;. .bashrc;fi
  - unpack
tar xf Goldkarpfen-termux.tar.gz ; cd Goldkarpfen
  - create an account
./new-account.sh
  - note your KEY_ADDR
  - check the config:
more ./Goldkarpfen.config
  - note your SERVER_PORT
  - add this to your /data/data/com.termux/files/usr/etc/tor/torrc
HiddenServiceDir /data/data/com.termux/files/usr/var/service/tor/KEY_ADDR/
HiddenServicePort 80 127.0.0.1:SERVER_PORT

  - (if you are using i2pd -> configure a tunnel in ~/.i2pd using SERVER_PORT)
  - start tor and/or i2pd
tor --quiet &
i2pd --daemon --loglevel=none &
  - start Goldkarpfen
bash Goldkarpfen.sh

2.3 UBUNTU QUICK INSTALL WITH TOR CONTROLLER
  # NOTE : These are commands with sudo : ABSOLUTELY NO WARRANTY
  # GET THE LATEST Goldkarpfen-latest.tar.gz AND GO INTO THE FOLDER CONTAINING IT
tar xfv Goldkarpfen-latest.tar.gz && cd Goldkarpfen
sudo apt-get install build-essential python3-stem fzy silversearcher-ag tor dc xxd curl
if ! grep "^export EDITOR" ~/.bashrc;then echo 'export EDITOR="nano"' >> ~/.bashrc ;. ~/.bashrc;fi
mkdir -p tmp && cd tmp
wget https://raw.githubusercontent.com/emikulic/darkhttpd/master/darkhttpd.c
gcc darkhttpd.c -o darkhttpd; sudo mv darkhttpd /usr/local/bin
if grep "^ *ControlPort" /etc/tor/torrc;then echo "YOU HAVE ALREADY CONIFGURED YOUR torrc - SKIP THE NEXT STEP AND CHECK IT MANUALLY";fi

  # THE NEXT COMMAND HAS 3 LINES
sudo printf "ControlPort 9051\nCookieAuthentication 1\n\
CookieAuthFile /var/lib/tor/control_auth_cookie\nCookieAuthFileGroupReadable 1\n\
DataDirectoryGroupReadable 1\nCacheDirectoryGroupReadable 1\n" >> /etc/tor/torrc

sudo usermod -a -G debian-tor $USER
  # RESTART YOUR COMPUTER - GO INTO GOLDKARPFEN FOLDER AND:
./check-dependencies.sh
  # The last line should be : tor-ctrl host get ok
./new-account.sh
  # AFTER THAT START YOUR GOLDKARPFEN WITH bash
bash Goldkarpfen.sh


3. SPECIAL INSTALL MODES
3.1 INSTALATION WITH ACCESS TO TOR CONTROLLER
  - install the basic dependencies
  ag (the-silver-searcher), fzy (or fzf), libressl/openssl, xxd from vim/xxd-standalone, darkhttpd, curl, python3, python-stem, tor

  - edit your /etc/tor/torrc to contain this
ControlPort 9051
CookieAuthentication 1
CookieAuthFile /var/lib/tor/control_auth_cookie
CookieAuthFileGroupReadable 1
DataDirectoryGroupReadable 1
CacheDirectoryGroupReadable 1

  - add your user to the tor group (debian-tor on ubuntu) (restart may be neccessary!)
  - test your settings
python3 -c "import stem" && ./check-dependencies.sh
  Should return: tor-ctrl ...

  - create an account
./new-account

  - start
bash ./Goldkarpfen.sh  # or
mksh ./Goldkarpfen.sh  # or
busybox sh ./Goldkarpfen.sh

  - get your onion-url
  Goldkarpfen will show the location of your hostname on start-up

  - add your onion-url url with [r][h]

3.2 USAGE WITH TOR_BROWSER
  - if you are using tor browser (port number 9150), add this to Goldkarpfen.config (line 5,6):

# TOR_PORT
9150

3.3 USAGE WITH i2pd
  - install the basic dependencies
  ag (the-silver-searcher), fzy (or fzf), libressl/openssl, xxd from vim/xxd-standalone, darkhttpd, curl, i2pd
  - start your i2p-daemon
i2pd

  - test your settings
./check-dependencies.sh
  should return: ... i2p ...

  - create an account
./new-account
  - check the config
more ./Goldkarpfen.config
  note your SERVER_PORT

  - configure a http tunnel (use SERVER_PORT defined in your Goldkarpfen.config) and restart i2pd
  - get your i2p-url
curl http://127.0.0.1:7070/?page=i2p_tunnels

  - start
bash ./Goldkarpfen.sh  # or
mksh ./Goldkarpfen.sh  # or
busybox sh ./Goldkarpfen.sh

  - add your i2p-url with [r][h]

3.4 MIXED NODES
  As you know, you can choose to host your node via tor or i2p (or both - adjust
  your my-start-services.sh my-stop-services.sh accordingly).
  If you have both tor (tor-static) and i2p running your Goldkarpfen
  will download from both type of nodes.
  As long a node url is reachable via tor or i2p, Goldkarpfen will connect to any
  url listed in your nodes.dat:
  That means the following are valid urls for GK:
    http:// ... .onion
    http:// ... .i2p
    http:// ... .tld
    http://localhost:9004
    gopher://... .onion
    gopher://... .i2p
    gopher://... .tld
    gopher://localhost:9004
    (https and ftp should also work - no warranty, not tested)

3.5 GOPHER instead of HTTP
  NOTE: Do something similar if you want to use a custom http-server
cp start-services.sh my-start-services.sh
cp stop-services.sh my-stop-services.sh

  - Edit my-start-service.sh : comment out darkhttpd lines and add the gopher lines:
#darkhttpd archives/ --port $2 --daemon --log server.log ...
geomyidae -b archives -p $2 -logfile server.log
if test "$3" = "tor-ctrl";then python3 start-hidden-service.py $1 $2 70;else sleep 0.2;fi #80 for http, 70 for gopher

  - Edit my-stop-service.sh and comment out darkhttp lines and add:
killall geomyidae #or come up with something more elaborated if you are running multiple instances


4. BASIC MAINTENANCE
4.1 UPDATES
  Normally you should update via the update plugin:
  press [r][A] (sync_all) and [r][U] (update)

  If you have no nodes you can connect to and want to invoke an update:
  - get the newest Goldkarpfen-1JULSJ5Nnba9So48zi21rpfTuZ3tqNRaFB.itp.tar.gz and
    Goldkarpfen-latest.tar.gz
  - mv those two files into archives
  - start Goldkarpfen and unpack
    Goldkarpfen-1JULSJ5Nnba9So48zi21rpfTuZ3tqNRaFB.itp.tar.gz, (contains shasum)
  - (advised) check the shasum (the signature has been checked on unpack)
    NOTE: This is done automatically when using [r][A] [r][U]
  - press [r][U] (update)

  If your installation is broken:
  - copy Goldkarpfen-latest.tar.gz into update
cd update
tar -xvf Goldkarpfen-latest.tar.gz
cp Goldkarpfen/update/sync_runtime_files.sh .
./sync_runtime_files.sh
rm Goldkarpfen-latest.tar.gz

4.2 NODE LIST MANAGEMENT
  You can add nodes to your nodes.dat via [r][a] (stream url1 + node-links).
  But the management of node labels is done by editing : [!]->nodes.dat
  Keep your nodes.dat nice and clean!
  - example nodes.dat :

# comment
#_peter________#
http://xranerunarnerunaetunatren...
#_paul_________#
gopher://xraar8392893naetunatren...
#_mary_________#
http://xraar8392893naetunatren...
# stop sync-ALL after this

#_barly-on1____#
http://xraar8392893naetunatren...
#_local________#
http://127.0.0.1:8098

4.3 PRUNING OF ITP-FILES
  itp-files contain yearly rotational data. That means that they have to be
  pruned on a regular base. Goldkarpfen prunes old entries on the first of every
  month. It will you inform on startup on that day. Check carfully and backup
  some entries you wanna keep (reposting)

4.4 DIFF-PATCH-MODE # dependency : xdelta3
  If you have xdelta3 installed, GK will produce a diff-file and offers it for
  download - there is no user interaction needed, generation and processing of
  diffs works automatically.

  Other nodes will download the diff file (if they have the according archive)
  and patch the according archive - this reduces the used bandwidth significantly
  (~500 B instead of 1-318 kBs per sync)

  GK will only produce and keep one diff (from the last archive) -
  cascading-diffs are not supported : the recieving user needs to have the last
  archive to process a diff ; if the "gap" is greater, GK will just download the
  whole file again.

  Diffs can only be generated if your archive was created ONCE a day; GK will
  take care of that and block generation of diffs, if your archive has been
  created more than once a day.

4.5 MIGRATING TO A NEW INSTALLATION
  If you want to migrate your data to a fresh install you have to do:
  - unpack the latest Goldkarpfen
  - copy .keys/ Goldkarpfen.config my-start-services.sh my-stop-services.sh
    nodes.dat blacklist.dat; and user made plugins in plugins/
  - copy your itp-files {.itp .itp.sha512sum .itp.sha512sum.sig}
  - copy archives/*.tar.gz
  - start Goldkarpfen and unpack your favorite archives

4.6 WHITLISTING DOWNLOAD MODE
  - create a file in your Goldkarpfen folder called whitelist.dat
  - edit it and add at least:
Goldkarpfen-1JULSJ5Nnba9So48zi21rpfTuZ3tqNRaFB.itp.tar.gz
Goldkarpfen-latest.tar.gz
  - add more streams of your choice

4.7 OFFER MORE THAN ONE FORK FOR DOWNLOAD
  - update to 279+
  - edit update-provider.inc.sh and have a line like this :

4.8 DISABLE darkhttpd LOGGING
  darkhttpd will log to server.log,
  if no log file is specified it would log to stdout.
  - disable logging :
  rm server.log ; ln -s /dev/null ./server.log


5. ADVANCED USGAE
5.1 MANUALLY ADDING DATA FILES
  itp-files:
  - exit Goldkarpfen
cp alias-_key_addr_.itp itp-files/
cp alias-_key_addr_.itp itp-files.sha512sum itp-files/
cp alias-_key_addr_.itp itp-files.sha512sum.sig itp-files/
  - start Goldkarpfen

  archives: (works from a running Goldkarpfen)
cp alias-_key_addr_.itp.tar.gz quarantine/
  - (optionally) unpack the archive with [u]-unpack
  - use [m]-quarantine to move it into archives

5.2 USER MADE PLUGINS
  - host your plugins in archives/share
  - line 2 must contain the version, line 3 the verification stream (your stream)
    (with leading #)

  Example (line 1 - 3):
# <!-- License info // plugin description -->
#V0.1
#Goldkarpfen-1JULSJ5Nnba9So48zi21rpfTuZ3tqNRaFB.itp

  - add the sha512sum as a post to your stream
    Example:
eea346f85c6f9e08079a80355a069d327993b480b22cd02dccbc3ceae27230fc0734321443543094f51a8952580466210c0a76d73b662ed2d629e4eb5657fee1  example-plugin.sh

  - add a post with the plugin tag (mandatory format <...> #... #...)
  Example:
<plugin=share/example-plugin.sh> #Goldkarpfen-1JULSJ5Nnba9So48zi21rpfTuZ3tqNRaFB.itp #V0.1

5.3 PLUGIN DEVELOPEMENT
  Please remember - all variables in POSIX-SHELL are GLOBAL!
  (except vars exclusively defined in a while loop)
  Goldkarpfen uses this globals:

  GENERAL:
    GK_ALIAS GK_COLS GK_FZF_CMD GK_ID GK_JM GK_LN GK_MODE GK_PATH GK_READ_CMD GK_DIFF_MODE
    OWN_ADDR OWN_ALIAS OWN_STREAM OWN_SUM
    ITPFILE  UPD_NAME UPD_NAME_REGEXP VERIFICATION_STREAM
    USER_PLUGINS_MENU USER_QUIT USER_HOOK_START USER_HOOK_ARCHIVE_START

  SCRATCH VARIABLES (do not call functions in between definition and processing):
    T_BUF T_BUF1 T_BUF2 T_CHAR T_COUNTER T_FILE T_LINE

  You should avoid using new globals at any cost
  (use set or scratch variables where ever possible).
  If you want to use some globals, add a uniq Prefix (e.g. $MYPLUGIN_XYZ)

5.4 CUSTOM SCRIPTS
  - instead of the default scripts you can use :
  my-sync-from-nodes.sh
  my-check-dependencies.sh
  my-start-services.sh
  my-stop-services.sh

  - you can add your own include in which you can overwrite any function :
  my-include.sh

5.5 SHARE HOSTING 00-ENTRIES
  You can share host plugins and other downloads. plugin.sh and download.sh will
  echo the format for it. If you want to add persistent entries of this technical
  data, that will not be pruned, you can use 00-entries. Have a look at
  itp-files/Goldkarpfen-1JULSJ5Nnba9So48zi21rpfTuZ3tqNRaFB.itp .
  The 00 entries have to be edited manually ([!]-edit) - both, posts and
  comments, are allowed.
  BE SURE THAT THOSE ENTRIES ARE ABOVE ALL "real-date-entries" AND IN ORDER.

5.6 FORKING GOLDKARPFEN
  - edit update-provider.inc.sh and change the entries - use your itp-file as the
    verification stream
  - pack a tarball with your forked Goldkarpfen and add a checksum to your
    itp-file (like in: Goldkarpfen-1JULSJ5Nnba9So48zi21rpfTuZ3tqNRaFB.itp)
  - move that tarball into your archives with your itp-file.tar.gz
  - tell your peers to change their update-provider.inc.sh accordingly


6. DISTRIBUTED SEARCH ENGINES
  CONCEPTION :
  - 1 out of (X) nodes hosts a (http/gopher) search engine,
    which holds a database of its archive (+ manually curated search entries);
    usable via curl (like url?search=what1+what2) to be used from inside GK
  - each search engine mirrors search data of (Y) search engines
    (with minimal archive overlap) (=> database size Y*30MB)
  - each client search request goes to (Z) random search engines
    the results will be merged/sorted on the client side
  - important data gets mirrored (share hosted by other nodes) by J% of the nodes
  - X=60 ; Y=10-20 ; Z=5 and J>2 for important data would result in good
    search results for important data

  LEVEL 0 SEARCH ENGINE
  a LVL0 search engine consist of:
    the search engine with indexed data of:
    + itp-streams with original content (blogs)
    + direct downloads/plugins of important content in the context of the search
      engine hoster
    + downlinks of important content in the context of the search engine hoster
    + entries of LVL1 search_engines (LVL0 search engines should de-list
      search engines that does not meet the requirements for LVL1)

  LEVEL 1 SEARCH ENGINE
  a LVL1 search engine consist of:
    the search engine with indexed data of:
    + itp-streams of downlink collections

  (NOTE : downlink example <url=https://gnu.org>)


7. ADDENDUM
  [ยน] openBSD start-gk.sh

#!/bin/sh
export PATH="$HOME/gkbin:$PATH"
for FFF in date tar sed stat;do
  if ! test $(basename $(realpath $(command -v $FFF))) = "g$FFF";then
    echo "install : gstat, gdate (coreutils) and gtar, gsed"
    exit
  fi
done
cd ~/Goldkarpfen || exit
mksh Goldkarpfen.sh

#LICENSE:CC0
